{"ast":null,"code":"export default class FirebaseService {}\n\nFirebaseService.list = (firestore, callback) => {\n  let ref = firestore.collection('estudantes');\n  ref.onSnapshot(query => {\n    let estudantes = [];\n    query.forEach(doc => {\n      const {\n        nome,\n        curso,\n        IRA\n      } = doc.data();\n      estudantes.push({\n        _id: doc.id,\n        nome,\n        curso,\n        IRA\n      }); //push\n    }); //forEach\n\n    callback(estudantes); //this._isMounted && this.setState({ estudantes: estudantes, loading: false })\n  });\n};\n\nFirebaseService.delete = (firestore, callback, id) => {\n  firestore.collection('estudantes').doc(id).delete().then(() => {\n    //console.log(`${nome} apagado.`)\n    callback('ok');\n  }).catch(error => {\n    //console.log(error)\n    callback('nok');\n  });\n};\n\nFirebaseService.create = (firestore, callback, estudante) => {\n  firestore.collection('estudantes').add({\n    nome: estudante.nome,\n    curso: estudante.curso,\n    IRA: estudante.IRA\n  }).then(() => {\n    callback('ok');\n  }).catch(error => {\n    callback('nok');\n  });\n};\n\nFirebaseService.retrieve = (firestore, callback, id) => {\n  firestore.collection('estudantes').doc(id).get().then(doc => {\n    const estudante = {\n      nome: doc.data().nome,\n      curso: doc.data().curso,\n      IRA: doc.data().IRA\n    };\n    callback(estudante);\n  }).catch(error => callback(null));\n};\n\nFirebaseService.edit = (firestore, callback, id, estudante) => {\n  firestore.collection('estudantes').doc(id).set({\n    nome: estudante.nome,\n    curso: estudante.curso,\n    IRA: estudante.IRA\n  }).then(() => {\n    callback('ok');\n  }).catch(() => {\n    callback('ok');\n  });\n};","map":{"version":3,"sources":["/home/jefferson/Desenvolvimento/websies2020-1/WEB_2020-1/IMPLEMENTACOES/aula-es-si/aula07-crud-firebase/src/services/FirebaseService.js"],"names":["FirebaseService","list","firestore","callback","ref","collection","onSnapshot","query","estudantes","forEach","doc","nome","curso","IRA","data","push","_id","id","delete","then","catch","error","create","estudante","add","retrieve","get","edit","set"],"mappings":"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","sourcesContent":["export default class FirebaseService {\n\n    static list = (firestore, callback) => {\n\n        let ref = firestore.collection('estudantes')\n        ref.onSnapshot((query) => {\n            let estudantes = []\n\n            query.forEach((doc) => {\n                const { nome, curso, IRA } = doc.data()\n                estudantes.push({\n                    _id: doc.id,\n                    nome,\n                    curso,\n                    IRA\n                })//push\n            })//forEach\n            callback(estudantes)\n            //this._isMounted && this.setState({ estudantes: estudantes, loading: false })\n        })\n\n    }\n\n    static delete = (firestore, callback, id) => {\n\n        firestore.collection('estudantes').doc(id).delete()\n            .then(\n                () => {\n                    //console.log(`${nome} apagado.`)\n                    callback('ok')\n                }\n            )\n            .catch(\n                (error) => {\n                    //console.log(error)\n                    callback('nok')\n                }\n            )\n    }\n\n    static create = (firestore, callback, estudante) => {\n\n        firestore.collection('estudantes').add(\n            {\n                nome: estudante.nome,\n                curso: estudante.curso,\n                IRA: estudante.IRA\n            }\n        )\n            .then(\n                () => {\n                    callback('ok')\n                }\n            )\n            .catch(\n                (error) => {\n                    callback('nok')\n                }\n            )\n    }\n\n    static retrieve = (firestore, callback, id) => {\n\n        firestore.collection('estudantes').doc(id).get()\n            .then((doc) => {\n                const estudante = {\n                    nome: doc.data().nome,\n                    curso: doc.data().curso,\n                    IRA: doc.data().IRA\n                }\n                callback(estudante)\n            })\n            .catch(error => callback(null))\n\n    }\n\n    static edit = (firestore, callback, id, estudante) => {\n\n        firestore.collection('estudantes').doc(id).set({\n            nome: estudante.nome,\n            curso: estudante.curso,\n            IRA: estudante.IRA\n        })\n            .then(() => {\n                callback('ok')\n            })\n            .catch(() => {\n                callback('ok')\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}