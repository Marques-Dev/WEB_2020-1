{"ast":null,"code":"export default class FirebaseService {\n  constructor() {\n    this.retrieve = (firestore, callback, id) => {\n      firestore.collection('estudantes').doc(id).get().then(doc => {\n        const estudante = {\n          nome: doc.data().nome,\n          curso: doc.data().curso,\n          IRA: doc.data().IRA\n        };\n        callback(estudante);\n      }).catch(error => callback(null));\n    };\n\n    this.edit = () => {};\n  }\n\n}\n\nFirebaseService.list = (firestore, callback) => {\n  let ref = firestore.collection('estudantes');\n  ref.onSnapshot(query => {\n    let estudantes = [];\n    query.forEach(doc => {\n      const {\n        nome,\n        curso,\n        IRA\n      } = doc.data();\n      estudantes.push({\n        _id: doc.id,\n        nome,\n        curso,\n        IRA\n      }); //push\n    }); //forEach\n\n    callback(estudantes); //this._isMounted && this.setState({ estudantes: estudantes, loading: false })\n  });\n};\n\nFirebaseService.delete = (firestore, callback, id) => {\n  firestore.collection('estudantes').doc(id).delete().then(() => {\n    //console.log(`${nome} apagado.`)\n    callback('ok');\n  }).catch(error => {\n    //console.log(error)\n    callback('nok');\n  });\n};\n\nFirebaseService.create = (firestore, callback, estudante) => {\n  firestore.collection('estudantes').add({\n    nome: estudante.nome,\n    curso: estudante.curso,\n    IRA: estudante.IRA\n  }).then(() => {\n    callback('ok');\n  }).catch(error => {\n    callback('nok');\n  });\n};","map":{"version":3,"sources":["/home/jefferson/Desenvolvimento/websies2020-1/WEB_2020-1/IMPLEMENTACOES/aula-es-si/aula07-crud-firebase/src/services/FirebaseService.js"],"names":["FirebaseService","retrieve","firestore","callback","id","collection","doc","get","then","estudante","nome","data","curso","IRA","catch","error","edit","list","ref","onSnapshot","query","estudantes","forEach","push","_id","delete","create","add"],"mappings":"AAAA,eAAe,MAAMA,eAAN,CAAsB;AAAA;AAAA,SA6DjCC,QA7DiC,GA6DtB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,EAAtB,KAA6B;AAEpCF,MAAAA,SAAS,CAACG,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,CAAuCF,EAAvC,EAA2CG,GAA3C,GACKC,IADL,CACWF,GAAD,IAAS;AACX,cAAMG,SAAS,GAAG;AACdC,UAAAA,IAAI,EAAEJ,GAAG,CAACK,IAAJ,GAAWD,IADH;AAEdE,UAAAA,KAAK,EAAEN,GAAG,CAACK,IAAJ,GAAWC,KAFJ;AAGdC,UAAAA,GAAG,EAAEP,GAAG,CAACK,IAAJ,GAAWE;AAHF,SAAlB;AAKAV,QAAAA,QAAQ,CAACM,SAAD,CAAR;AACH,OARL,EASKK,KATL,CASWC,KAAK,IAAIZ,QAAQ,CAAC,IAAD,CAT5B;AAWH,KA1EgC;;AAAA,SA4EjCa,IA5EiC,GA4E1B,MAAM,CAEZ,CA9EgC;AAAA;;AAAA;;AAAhBhB,e,CAEViB,I,GAAO,CAACf,SAAD,EAAYC,QAAZ,KAAyB;AAEnC,MAAIe,GAAG,GAAGhB,SAAS,CAACG,UAAV,CAAqB,YAArB,CAAV;AACAa,EAAAA,GAAG,CAACC,UAAJ,CAAgBC,KAAD,IAAW;AACtB,QAAIC,UAAU,GAAG,EAAjB;AAEAD,IAAAA,KAAK,CAACE,OAAN,CAAehB,GAAD,IAAS;AACnB,YAAM;AAAEI,QAAAA,IAAF;AAAQE,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAAuBP,GAAG,CAACK,IAAJ,EAA7B;AACAU,MAAAA,UAAU,CAACE,IAAX,CAAgB;AACZC,QAAAA,GAAG,EAAElB,GAAG,CAACF,EADG;AAEZM,QAAAA,IAFY;AAGZE,QAAAA,KAHY;AAIZC,QAAAA;AAJY,OAAhB,EAFmB,CAOjB;AACL,KARD,EAHsB,CAWpB;;AACFV,IAAAA,QAAQ,CAACkB,UAAD,CAAR,CAZsB,CAatB;AACH,GAdD;AAgBH,C;;AArBgBrB,e,CAuBVyB,M,GAAS,CAACvB,SAAD,EAAYC,QAAZ,EAAsBC,EAAtB,KAA6B;AAEzCF,EAAAA,SAAS,CAACG,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,CAAuCF,EAAvC,EAA2CqB,MAA3C,GACKjB,IADL,CAEQ,MAAM;AACF;AACAL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GALT,EAOKW,KAPL,CAQSC,KAAD,IAAW;AACP;AACAZ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAXT;AAaH,C;;AAtCgBH,e,CAwCV0B,M,GAAS,CAACxB,SAAD,EAAYC,QAAZ,EAAsBM,SAAtB,KAAoC;AAEhDP,EAAAA,SAAS,CAACG,UAAV,CAAqB,YAArB,EAAmCsB,GAAnC,CACI;AACIjB,IAAAA,IAAI,EAAED,SAAS,CAACC,IADpB;AAEIE,IAAAA,KAAK,EAAEH,SAAS,CAACG,KAFrB;AAGIC,IAAAA,GAAG,EAAEJ,SAAS,CAACI;AAHnB,GADJ,EAOKL,IAPL,CAQQ,MAAM;AACFL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAVT,EAYKW,KAZL,CAaSC,KAAD,IAAW;AACPZ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAfT;AAiBH,C","sourcesContent":["export default class FirebaseService {\n\n    static list = (firestore, callback) => {\n\n        let ref = firestore.collection('estudantes')\n        ref.onSnapshot((query) => {\n            let estudantes = []\n\n            query.forEach((doc) => {\n                const { nome, curso, IRA } = doc.data()\n                estudantes.push({\n                    _id: doc.id,\n                    nome,\n                    curso,\n                    IRA\n                })//push\n            })//forEach\n            callback(estudantes)\n            //this._isMounted && this.setState({ estudantes: estudantes, loading: false })\n        })\n\n    }\n\n    static delete = (firestore, callback, id) => {\n\n        firestore.collection('estudantes').doc(id).delete()\n            .then(\n                () => {\n                    //console.log(`${nome} apagado.`)\n                    callback('ok')\n                }\n            )\n            .catch(\n                (error) => {\n                    //console.log(error)\n                    callback('nok')\n                }\n            )\n    }\n\n    static create = (firestore, callback, estudante) => {\n\n        firestore.collection('estudantes').add(\n            {\n                nome: estudante.nome,\n                curso: estudante.curso,\n                IRA: estudante.IRA\n            }\n        )\n            .then(\n                () => {\n                    callback('ok')\n                }\n            )\n            .catch(\n                (error) => {\n                    callback('nok')\n                }\n            )\n    }\n\n    retrieve = (firestore, callback, id) => {\n\n        firestore.collection('estudantes').doc(id).get()\n            .then((doc) => {\n                const estudante = {\n                    nome: doc.data().nome,\n                    curso: doc.data().curso,\n                    IRA: doc.data().IRA\n                }\n                callback(estudante)\n            })\n            .catch(error => callback(null))\n\n    }\n\n    edit = () => {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}