{"ast":null,"code":"import { SIGNUP_SUCCESS, SIGNUP_ERROR, SIGNOUT_SUCCESS, SIGNOUT_ERROR } from \"./actionTypes\";\nimport firebase from '../../utils/firebase';\nexport const signup = (email, password, callback) => async dispatch => {\n  try {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: {\n              authMsg: 'Conta criada com sucesso!',\n              user: user.email\n            }\n          });\n          callback(user);\n        } else {\n          // No user is signed in.\n          dispatch({\n            type: SIGNUP_ERROR,\n            payload: {\n              authMsg: 'Não foi possível conectar o usuário. Tente novamente.'\n            }\n          });\n          callback();\n        }\n      }); //firebase.auth().onAuthStateChanged\n    }) //then\n    .catch(error => {\n      dispatch({\n        type: SIGNUP_ERROR,\n        payload: {\n          authMsg: `Erro na criação do usuário: ${error}`\n        }\n      });\n      callback();\n    }); //catch\n  } catch (error) {\n    dispatch({\n      type: SIGNUP_ERROR,\n      payload: {\n        authMsg: `Erro na conexão com o firebase: ${error}`\n      }\n    });\n    callback();\n  }\n};\nexport const signout = callback => async dispatch => {\n  try {\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: SIGNOUT_SUCCESS,\n        payload: {\n          authMsg: 'Signout efetuado com sucesso.'\n        }\n      });\n      callback();\n    }).catch(error => {\n      dispatch({\n        type: SIGNOUT_ERROR,\n        payload: {\n          authMsg: `Erro no signout: ${error}`\n        }\n      });\n      callback();\n    });\n  } catch (error) {\n    dispatch({\n      type: SIGNOUT_ERROR,\n      payload: {\n        authMsg: `Erro na conexão com o firebase: ${error}`\n      }\n    });\n    callback();\n  }\n};\nexport const signin = (email, password, callback) => async dispatch => {\n  try {} catch (error) {\n    dispatch({\n      type: SIGNIN_ERROR,\n      payload: {\n        authMsg: `Erro na conexão com o firebase: ${error}`\n      }\n    });\n    callback();\n  }\n};","map":{"version":3,"sources":["/home/jefferson/Desenvolvimento/websies2020-1/WEB_2020-1/IMPLEMENTACOES/aula-es-si/aula09-redux-firebase-authentication/src/store/actions/authActionCreator.js"],"names":["SIGNUP_SUCCESS","SIGNUP_ERROR","SIGNOUT_SUCCESS","SIGNOUT_ERROR","firebase","signup","email","password","callback","dispatch","auth","createUserWithEmailAndPassword","then","onAuthStateChanged","user","type","payload","authMsg","catch","error","signout","signOut","signin","SIGNIN_ERROR"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,eAAvC,EAAwDC,aAAxD,QAA6E,eAA7E;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACAL,IAAAA,QAAQ,CAACM,IAAT,GACKC,8BADL,CACoCL,KADpC,EAC2CC,QAD3C,EAEKK,IAFL,CAGQ,MAAM;AACFR,MAAAA,QAAQ,CAACM,IAAT,GAAgBG,kBAAhB,CAAmC,UAAUC,IAAV,EAAgB;AAC/C,YAAIA,IAAJ,EAAU;AACNL,UAAAA,QAAQ,CAAC;AACLM,YAAAA,IAAI,EAAEf,cADD;AAELgB,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAE,2BAAX;AAAwCH,cAAAA,IAAI,EAAEA,IAAI,CAACR;AAAnD;AAFJ,WAAD,CAAR;AAIAE,UAAAA,QAAQ,CAACM,IAAD,CAAR;AACH,SAND,MAMO;AACH;AACAL,UAAAA,QAAQ,CAAC;AACLM,YAAAA,IAAI,EAAEd,YADD;AAELe,YAAAA,OAAO,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX;AAFJ,WAAD,CAAR;AAIAT,UAAAA,QAAQ;AACX;AACJ,OAfD,EADE,CAgBA;AAEL,KArBT,EAsBK;AAtBL,KAuBKU,KAvBL,CAwBSC,KAAD,IAAW;AACPV,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEd,YADD;AAELe,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAG,+BAA8BE,KAAM;AAAhD;AAFJ,OAAD,CAAR;AAIAX,MAAAA,QAAQ;AACX,KA9BT,EADA,CAgCK;AAER,GAlCD,CAkCE,OAAOW,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEd,YADD;AAELe,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAG,mCAAkCE,KAAM;AAApD;AAFJ,KAAD,CAAR;AAIAX,IAAAA,QAAQ;AACX;AACJ,CA1CM;AA4CP,OAAO,MAAMY,OAAO,GAAIZ,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACnD,MAAI;AACAL,IAAAA,QAAQ,CAACM,IAAT,GACKW,OADL,GAEKT,IAFL,CAGQ,MAAM;AAEFH,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEb,eADD;AAELc,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAFJ,OAAD,CAAR;AAIAT,MAAAA,QAAQ;AACX,KAVT,EAaKU,KAbL,CAcSC,KAAD,IAAW;AACPV,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEZ,aADD;AAELa,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAG,oBAAmBE,KAAM;AAArC;AAFJ,OAAD,CAAR;AAIAX,MAAAA,QAAQ;AACX,KApBT;AAuBH,GAxBD,CAwBE,OAAOW,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ,aADD;AAELa,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAG,mCAAkCE,KAAM;AAApD;AAFJ,KAAD,CAAR;AAIAX,IAAAA,QAAQ;AACX;AACJ,CAhCM;AAkCP,OAAO,MAAMc,MAAM,GAAG,CAAChB,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B,MAAMC,QAAN,IAAkB;AACnE,MAAG,CAEF,CAFD,CAEC,OAAMU,KAAN,EAAY;AACTV,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEQ,YADD;AAELP,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAG,mCAAkCE,KAAM;AAApD;AAFJ,KAAD,CAAR;AAIAX,IAAAA,QAAQ;AACX;AACJ,CAVM","sourcesContent":["import { SIGNUP_SUCCESS, SIGNUP_ERROR, SIGNOUT_SUCCESS, SIGNOUT_ERROR } from \"./actionTypes\";\nimport firebase from '../../utils/firebase'\n\nexport const signup = (email, password, callback) => async dispatch => {\n    try {\n        firebase.auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(\n                () => {\n                    firebase.auth().onAuthStateChanged(function (user) {\n                        if (user) {\n                            dispatch({\n                                type: SIGNUP_SUCCESS,\n                                payload: { authMsg: 'Conta criada com sucesso!', user: user.email }\n                            })\n                            callback(user)\n                        } else {\n                            // No user is signed in.\n                            dispatch({\n                                type: SIGNUP_ERROR,\n                                payload: { authMsg: 'Não foi possível conectar o usuário. Tente novamente.' }\n                            })\n                            callback()\n                        }\n                    })//firebase.auth().onAuthStateChanged\n\n                }\n            )//then\n            .catch(\n                (error) => {\n                    dispatch({\n                        type: SIGNUP_ERROR,\n                        payload: { authMsg: `Erro na criação do usuário: ${error}` }\n                    })\n                    callback()\n                }\n            )//catch\n\n    } catch (error) {\n        dispatch({\n            type: SIGNUP_ERROR,\n            payload: { authMsg: `Erro na conexão com o firebase: ${error}` }\n        })\n        callback()\n    }\n}\n\nexport const signout = (callback) => async dispatch => {\n    try {\n        firebase.auth()\n            .signOut()\n            .then(\n                () => {\n\n                    dispatch({\n                        type: SIGNOUT_SUCCESS,\n                        payload: { authMsg: 'Signout efetuado com sucesso.' }\n                    })\n                    callback()\n                }\n\n            )\n            .catch(\n                (error) => {\n                    dispatch({\n                        type: SIGNOUT_ERROR,\n                        payload: { authMsg: `Erro no signout: ${error}` }\n                    })\n                    callback()\n                }\n            )\n\n    } catch (error) {\n        dispatch({\n            type: SIGNOUT_ERROR,\n            payload: { authMsg: `Erro na conexão com o firebase: ${error}` }\n        })\n        callback()\n    }\n}\n\nexport const signin = (email, password, callback) => async dispatch => {\n    try{\n\n    }catch(error){\n        dispatch({\n            type: SIGNIN_ERROR,\n            payload: { authMsg: `Erro na conexão com o firebase: ${error}` }\n        })\n        callback()\n    }\n}"]},"metadata":{},"sourceType":"module"}